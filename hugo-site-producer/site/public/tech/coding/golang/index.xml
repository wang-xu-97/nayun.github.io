<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on nayun blog</title>
    <link>http://localhost:43997/nayun.github.io/tech/coding/golang/</link>
    <description>Recent content in golang on nayun blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2025 nayun</copyright>
    <lastBuildDate>Tue, 29 Jul 2025 17:43:19 +0800</lastBuildDate><atom:link href="http://localhost:43997/nayun.github.io/tech/coding/golang/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bufio</title>
      <link>http://localhost:43997/nayun.github.io/tech/coding/golang/bufio/</link>
      <pubDate>Tue, 29 Jul 2025 17:43:19 +0800</pubDate>
      
      <guid>http://localhost:43997/nayun.github.io/tech/coding/golang/bufio/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;bufio 包详解 
    &lt;div id=&#34;bufio-包详解&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#bufio-%e5%8c%85%e8%af%a6%e8%a7%a3&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;bufio&lt;/code&gt; 是 Go 标准库中的一个包，提供了带缓冲的 I/O 操作功能。它可以包装现有的 &lt;code&gt;io.Reader&lt;/code&gt; 和 &lt;code&gt;io.Writer&lt;/code&gt; 对象，创建具有缓冲功能的对象，从而提高 I/O 操作的效率。&lt;/p&gt;

&lt;h2 class=&#34;relative group&#34;&gt;核心概念 
    &lt;div id=&#34;核心概念&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;

&lt;h3 class=&#34;relative group&#34;&gt;缓冲 I/O 的优势 
    &lt;div id=&#34;缓冲-io-的优势&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e7%bc%93%e5%86%b2-io-%e7%9a%84%e4%bc%98%e5%8a%bf&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;减少系统调用&lt;/strong&gt;：通过缓冲数据，减少实际的 I/O 操作次数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高性能&lt;/strong&gt;：特别是对于小数据量的频繁读写操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提供更方便的接口&lt;/strong&gt;：如按行读取等功能&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 class=&#34;relative group&#34;&gt;主要类型和方法 
    &lt;div id=&#34;主要类型和方法&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#%e4%b8%bb%e8%a6%81%e7%b1%bb%e5%9e%8b%e5%92%8c%e6%96%b9%e6%b3%95&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;

&lt;h3 class=&#34;relative group&#34;&gt;1. Reader 
    &lt;div id=&#34;1-reader&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#1-reader&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;bufio.Reader&lt;/code&gt; 为读取操作提供缓冲。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
